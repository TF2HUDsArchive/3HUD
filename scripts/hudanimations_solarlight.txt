// Spy Disguise
event HudSpyDisguiseChanged
{
	Animate PlayerStatusSpyOutlineImage		Alpha		"255"			Linear 0.0 0.2

	Animate PlayerStatusSpyOutlineImage		Position	"c-350 r150"	Linear 0.0 0.2
	Animate PlayerStatusSpyOutlineImage		Size		"150 150"		Linear 0.0 0.2

	RunEvent HudSpyDisguiseHide	0.7
}

event HudSpyDisguiseHide
{
	Animate PlayerStatusSpyOutlineImage		Position	"30 443"			Linear 0.0 0.2
	Animate PlayerStatusSpyOutlineImage		Size		"55 55"			Linear 0.0 0.2

	Animate PlayerStatusSpyOutlineImage		Alpha		"0"				Linear 0.2 0.1
}

event HudSpyDisguiseFadeIn
{
	RunEvent HudSpyDisguiseChanged	0
	Animate PlayerStatusSpyImage			Alpha		"255"			Linear 0.9 0.1
}

event HudSpyDisguiseFadeOut
{
	RunEvent HudSpyDisguiseChanged	0
	Animate PlayerStatusSpyImage			Alpha		"0"				Linear 0.9 0.1
}

//===========================================
event HudHealthBonusPulse
{
	Animate	BadBoxE			bgColor		"0 170 232 130"	Linear 0.0 0.0
	Animate	GuiPlayerHealth				FgColor		"SolarMenuBlue"			Linear 0.0 0.0
	Animate RedPlayerHealth				FgColor		"SolarMenuBlue"			Linear 0.0 0.0
	Animate BluePlayerHealth			FgColor		"SolarMenuBlue"			Linear 0.0 0.0
	Animate	PlayerStatusHealthBonusImage 	Alpha		"255"		Linear 0.0 0.1
	RunEvent HudHealthBonusPulseCycle1 0.0
	RunEvent HudHealthBonusPulseLoop	0.1000
}
event HudHealthReset
{
 	Animate	BadBoxE		bgcolor		"oof"	Linear 0.0 0.1
}

event HudHealthBonusPulseCycle1
{
	RunEvent HudHealthBonusPulseMain 	0.0

	Animate	BadBoxE			bgColor		"0 170 232 130"	Linear 0.0 0.0
	RunEvent HudHealthBonusPulseCycle2 	0.0
}
event HudHealthBonusPulseCycle2
{
	RunEvent HudHealthBonusPulseMain 	0.0
	Animate	BadBoxE			bgColor		"0 170 232 130"	Linear 0.0 0.0
	RunEvent HudHealthBonusPulseLoop1 	0.0
}
event HudHealthBonusPulseMain
{
	// [ your HUD animation goes here ]

	Animate	BadBoxE			bgColor		"0 170 232 130"	Linear 0.0 0.0

	RunEvent HudHealthReset 0.2499

}
// call to loop HudHealthBonusPulse
event HudHealthBonusPulseLoop
{
	RunEvent HudHealthBonusPulse 0.0
}

event HudHealthBonusPulseStop
{
	RunEvent HudHealthReset 0.0
	StopEvent HudHealthBonusPulse 0.0
	StopEvent HudHealthBonusPulseLoop 0.0
	Animate BadBoxE		bgcolor		"oof"	Linear 0.0 0.1
	Animate	PlayerStatusHealthBonusImage 	Alpha		"0"			Linear 0.0 0.0
	Animate	GuiPlayerHealth				FgColor		"succ"			Linear 0.0 0.0
	Animate RedPlayerHealth				FgColor		"succ"			Linear 0.0 0.0
	Animate BluePlayerHealth			FgColor		"succ"			Linear 0.0 0.0
	StopEvent HudHealthBonusPulseCycle1		0.0
	StopEvent HudHealthBonusPulseCycle2		0.0

}

//===========================================

//Health Dying Pulse
event HudHealthDyingPulse
{
	Animate	BadBoxE		bgcolor		"255 40 40 130"	Linear 0.0 0.1
	Animate	PlayerStatusHealthBonusImage 	Alpha		"255"		Linear 0.0 0.1
	Animate	GuiPlayerHealth				FgColor		"255 100 100 255"			Linear 0.0 0.0
	Animate RedPlayerHealth				FgColor		"255 100 100 255"			Linear 0.0 0.0
	Animate BluePlayerHealth			FgColor		"255 100 100 255"			Linear 0.0 0.0
	RunEvent HudHealthDyingPulseLoop	0.1000
	RunEvent HudHealthDyingPulseCycle1 0.0
}
event HudHealthDyingPulseCycle1
{
	RunEvent HudHealthDyingPulseMain 	0.0
	Animate	BadBoxE		bgcolor		"255 40 40 130"	Linear 0.0 0.0
	RunEvent HudHealthDyingPulseCycle2 	0.0
}

event HudHealthDyingPulseCycle2
{
	RunEvent HudHealthDyingPulseMain 	0.0
	Animate	BadBoxE		bgcolor		"255 40 40 130"	Linear 0.0 0.0
	RunEvent HudHealthDyingPulseCycle1 	0.0
}
event HudHealthDyingPulseMain
{
	// Run the animation
 	Animate	BadBoxE		bgcolor		"oof"	Linear 0.0 0.0
	// Reset the animation -0.0001s before it finishes to make sure it gets reset when you spawn
	RunEvent HudHealthReset 0.2499
}
// call to loop HudHealthDyingPulse
event HudHealthDyingPulseLoop
{
	RunEvent HudHealthDyingPulse 0.0
}

event HudHealthDyingPulseStop
{
	RunEvent HudHealthReset 0.0
	StopEvent HudHealthDyingPulse 0.0
	StopEvent HudHealthDyingPulseLoop 0.0
	Animate	BadBoxE		bgcolor		"oof"	Linear 0.0 0.1
	Animate	PlayerStatusHealthBonusImage 	Alpha		"0"			Linear 0.0 0.1
	Animate	GuiPlayerHealth				FgColor		"succ"			Linear 0.0 0.0
	Animate RedPlayerHealth				FgColor		"succ"			Linear 0.0 0.0
	Animate BluePlayerHealth			FgColor		"succ"			Linear 0.0 0.0
	StopEvent HudHealthDyingPulseCycle1 		0.0
	StopEvent HudHealthDyingPulseCycle2 		0.0
}
event HudHealthReset
{
 	Animate	BadBoxE		bgcolor		"oof"	Linear 0.0 0.1
}

//===========================================

event HudLowAmmoPulse
{
	Animate	BadBox				bgcolor		"255 40 40 130"			Linear 0.0 0.0
	Animate HMM						bgcolor		"0 0 0 0"						Linear 0.0 0.1
	RunEvent HudLowAmmoPulseLoop	0.1000
	RunEvent HudLowAmmoPulseCycle1 0.0
}
event HudLowAmmoPulseCycle1
{
	RunEvent HudLowAmmoPulseMain 	0.0
	Animate	BadBox				bgcolor		"255 40 40 130"			Linear 0.0 0.0
	RunEvent HudLowAmmoPulseCycle2 	0.0
}
event HudLowAmmoPulseCycle2
{
	RunEvent HudLowAmmoPulseMain 	0.0
	Animate BadBox				bgcolor		"255 40 40 130" Linear 0.0 0.0
	RunEvent HudLowAmmoPulseCycle1 	0.0
}

event HudLowAmmoPulseMain
{
	// Run the animation
 	Animate	BadBox				bgcolor		"255 40 40 130"			Linear 0.0 0.0
	// Reset the animation -0.0001s before it finishes to make sure it gets reset when you spawn
	RunEvent HudHealthReset 0.2499
}

// call to loop HudLowAmmoPulse
event HudLowAmmoPulseLoop
{
	RunEvent HudLowAmmoPulse 0.0
}

event HudLowAmmoPulseStop
{
	StopEvent HudLowAmmoPulse 0.0
	StopEvent HudLowAmmoPulseLoop 0.0

	Animate BadBox					bgcolor		"oof"		Linear 0.0 0.0001
	Animate HMM						bgcolor		"0 0 0 50"						Linear 0.0 0.1
	RunEvent HudHealthReset 0.0
	StopEvent HudLowAmmoPulseCycle1 		0.0
	StopEvent HudLowAmmoPulseCycle2 		0.0
}
event HudHealthReset
{
 Animate BadBox bgColor "oof" Linear 0.0 0.0
}
event OvertimeLabelPulseRed
{
	Animate	OvertimeLabel 	FgColor		"161 0 0 255"	Linear 0.0 0.75
	Animate	OvertimeLabel 	FgColor		"211 137 127 255"	Linear 0.85 0.75

	RunEvent OvertimeLabelPulseRed 1.70
}

event CompetitiveGame_LowerChatWindow
{
}

event CompetitiveGame_RestoreChatWindow
{
}

event HudTournament_MoveChatWindow
{
}

event HudMatchStatus_ShowMatchStartDoors
{
	SetVisible	BlueTeamPanel	1	0
	SetVisible	RedTeamPanel	1	0
	SetVisible CountdownLabel 1 0
	SetVisible CountdownLabelShadow 1 0
	Animate CountdownLabel ypos 150 Linear 0 0
	Animate CountdownLabelShadow ypos 150 Linear 0 0

	Animate CountdownLabel ypos c-3 Gain 0.75 0 0.4
	Animate CountdownLabelShadow ypos c-0 Gain 0.75 0 0.4

	SetVisible	HudTournamentBG 0	2

	RunEvent HudTournament_AnimateTeams_In 0.25
	RunEvent HudTournament_AnimateTeams_Out 7.70

	SetVisible CountdownLabel 0 9.9
	SetVisible CountdownLabelShadow 0 9.9

	RunEvent HudTournament_DoorsCleanup 10

	SetVisible CountdownBG 1 11
}

event TeamStatus_PlayerDead
{
	SetVisible respawntime  1 0
}

event TeamStatus_PlayerAlive
{
	SetVisible respawntime 0 0.2
}

event ActiveTimerBGPulse
{
}

event ActiveTimerHighlight
{
}

event ActiveTimerDim
{
}

event HudTournament_AnimateTeams_In
{
}

event HudTournament_AnimateTeams_Out
{
}

event HudReadyPulse
{
	Animate	TournamentInstructionsLabel 	FgColor		"255 255 255 255"	Linear 0.0 0.1

	RunEvent HudReadyPulseLoop	1.70
}

event HudReadyPulseLoop
{
	RunEvent HudReadyPulse			0.0
}

event HudReadyPulseEnd
{
	Animate	TournamentInstructionsLabel 	FgColor		"0 0 0 0"		Linear 0.0 0.1

	StopEvent HudReadyPulse			0.0
	StopEvent HudReadyPulseLoop		0.0
}

// OMG THX ZEESASTROUS

// The first loop.
event HudHealthBonusPulseCycle1
{
	RunEvent HudHealthBonusPulseMain 	0.0

	// The second loop runs at the same time your animation loop stops. So, if your animation lasts 0.25 seconds, you want to run the 2nd loop at 0.25.
	RunEvent HudHealthBonusPulseCycle2 	0.25
}

// The second loop.
event HudHealthBonusPulseCycle2
{
	RunEvent HudHealthBonusPulseMain 	0.0
	RunEvent HudHealthBonusPulseLoop1 	0.25
}

// This is where the main animation goes.
event HudHealthBonusPulseMain
{
	// [ your HUD animation goes here ]

	// HudHealthReset is an event that resets the health status back to normal.
	// In case that the animation isn't reset properly, this event won't be stopped by the client, thus making sure the health element gets reset at the end of the animation. If the player is still overhealed, both loops will continue running this event over and over until they're stopped by HudHealthBonusPulseStop.

	RunEvent HudHealthReset 0.2499
	// Run it at -0.0001s than the duration of your animation.
	// You can also do -0.0002s to be safe, however you may see the animation flicker back to normal for a frame.

}

// The main event that stops
event HudHealthBonusPulseStop
{
	// Reset the health animation to default
	RunEvent HudHealthReset 0.0

	// Stop the loops
	StopEvent HudHealthBonusPulseCycle1		0.0
	StopEvent HudHealthBonusPulseCycle2		0.0
}

// === LOW HEALTH ===

event HudHealthDyingPulse
{
	// You can put animations that run only once when the player enters low health state

	// Run the first loop.
	RunEvent HudHealthDyingPulseCycle1 0.01
}

// First loop
event HudHealthDyingPulseCycle1
{
	RunEvent HudHealthDyingPulseMain 	0.0
	RunEvent HudHealthDyingPulseCycle2 	0.25
}

// Second loop
event HudHealthDyingPulseCycle2
{
	RunEvent HudHealthDyingPulseMain 	0.0
	RunEvent HudHealthDyingPulseCycle1 	0.25
}

event HudHealthDyingPulseMain
{
	// Run the animation

	// Reset the animation -0.0001s before it finishes to make sure it gets reset when you spawn
	RunEvent HudHealthReset 0.2499
}
event HudHealthDyingPulseStop
{
	// Reset the health animation to default
	RunEvent HudHealthReset 0.0

	// Stop the loops
	StopEvent HudHealthDyingPulseCycle1 		0.0
	StopEvent HudHealthDyingPulseCycle2 		0.0
}

// This is where you put the animations required to reset the look of the health element
event HudHealthReset
{

}
